<!DOCTYPE html>
<html lang="en">
<head>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.7/dist/umd/popper.min.js" integrity="sha384-zYPOMqeu1DAVkHiLqWBUTcbYfZ8osu1Nd6Z89ify25QV9guujx43ITvfi12/QExE" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.min.js" integrity="sha384-Y4oOpwW3duJdCWv5ly8SCFYWqFDsfob/3GkgExXKV4idmbt98QcxXYs9UoXAB7BZ" crossorigin="anonymous"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Blog Post</title>
</head>
<body>
<div class="container-fluid" style="height: 100vh; padding: 0 !important;">
<!--    Nav bar-->
    <nav class="navbar navbar-expand-lg text-bg-primary p-4">
        <div class="container-fluid">
            <h1>myBlogspot</h1>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavAltMarkup" aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNavAltMarkup" style="margin-left: 4rem;">
                <div class="navbar-nav">
                    <a class="nav-link text-white" aria-current="page" href="/blog">Home</a>
<!--                    <a class="nav-link text-white" href="#">myBlogs</a>-->
                    <a class="nav-link text-white" href="/blog/create">writeABlog</a>
                </div>
            </div>
        </div>
    </nav>
<!--    Nav bar/-->
<!--    blog area-->
    <div class="container my-5">
        <div class="row">
            <div class="col-md-8 offset-md-2">
<!--                blog image (if exists) -->
                <div id="blogImageContainer" style="object-fit: contain">
                    <% if (blogPost.imageFile) { %>
                        <img src="<%= blogPost.imageFile %>" alt="Blog Image" style="width: 840px; height: auto; max-height: 420px; ">
                    <% } %>
                </div>
<!--                blog title, author-->
                <h1 class="mb-2"><%= blogPost.title %></h1>
                <p class="text-muted mb-4">By <%= blogPost.author %></p>
<!--                blog content-->
                <div class="blog-content">
                    <%- blogPost.content %>
                </div>
            </div>
            <div class="mt-4 mb-4 col-md-8 offset-md-2">
                <!-- like button and count -->
                <div class="d-flex align-items-center mb-4">
                    <button id="likeButton" class="btn btn-primary" onclick="sendLike('<%= JSON.stringify(blogPost) %>', '<%= uid %>')" <%= blogPost.likes.length ? blogPost.likes.includes(uid) ? 'disabled' : '' : '' %>>
                        <i class="bi bi-heart"></i> Like
                    </button>
                    <span id="likeCount" class="ms-3"><%= blogPost.likes.length || 0 %> likes</span>
                </div>

                <!-- comment form -->
                <div class="mb-4">
                    <h4>Leave a Comment:</h4>
                    <form id="commentForm">
                        <div class="mb-3">
                            <label for="commentName" class="form-label">Name:</label>
                            <input type="text" id="userName" name="name" class="form-control" required>
                        </div>
                        <div class="mb-3">
                            <label for="commentText" class="form-label">Comment:</label>
                            <textarea id="userComment" name="comment" class="form-control" rows="3" required></textarea>
                        </div>
                        <button type="addComment" class="btn btn-primary" onclick="addComment('<%= JSON.stringify(blogPost) %>')">Submit</button>
                    </form>
                </div>

                <!-- comments list -->
                <div class="comments">
                    <h4>Comments:</h4>
                    <% blogPost.comments.forEach((comment) => { %>
                        <div class="card mb-3">
                            <div class="card-body">
                                <h5 class="card-title"><%= comment.userName%></h5>
                                <p class="card-text"><%= comment.userComment%></p>
                            </div>
                        </div>
                    <% }) %>
                </div>
            </div>
        </div>
        <!-- like and comment section -->

    </div>
<!--    blog area/-->
<!--    next post button-->
    <div class="next-post-btn-container">
        <button id="nextPostButton" class="btn btn-primary" onclick="gotoNextPost('<%= blogPost.id %>')">Goto next post</button>
    </div>
</div>

</body>
</html>

<style>
    .next-post-btn-container {
        position: fixed;
        top: 50%;
        right: 20px;
        transform: translateY(-50%);
    }
</style>

<script>
    // Add your like
    async function sendLike(data, uid) {
        // Parse data from stringify
        const blogPost = JSON.parse(data);
        // Push uid into likes array
        blogPost.likes.push(uid)

        try {
            const response = await fetch('/blog/', {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(blogPost)
            })

            if (response.ok) {
                const data = await response.text();
                console.log('Blog created:', data);
                // Redirect the user to the main page
                location.reload();
            } else {
                const error = await response.text();
                console.error('Error during creation:', error);
                // Display an error message to the user
                alert('Failed to create new blog. Please check all inputs.');
            }
        } catch (error) {
            console.error('Error during fetch:', error);
            // Display an error message to the user
            alert('Failed to create new blog. Please try again.');
        }
    }

    // Add your comment
    async function addComment(data) {
        const blogPost = JSON.parse(data);
        const userComment = document.getElementById('userComment').value;
        const userName = document.getElementById('userName').value;

        // Push comment into comments array
        blogPost.comments.push({
            userName,
            userComment
        })

        try {
            const response = await fetch('/blog/', {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(blogPost)
            })

            if (response.ok) {
                const data = await response.text();
                console.log('Blog created:', data);
                // Redirect the user to the main page
                location.reload();
            } else {
                const error = await response.text();
                console.error('Error during creation:', error);
                // Display an error message to the user
                alert('Failed to create new blog. Please check all inputs.');
            }
        } catch (error) {
            console.error('Error during fetch:', error);
            // Display an error message to the user
            alert('Failed to create new blog. Please try again.');
        }
    }

    // Go to the next blogPost
    async function gotoNextPost(currentPostId) {
        try {
            const response = await fetch('/blog/nextPost', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ currentPostId })
            });

            if (response.ok) {
                const nextPost = await response.json();
                // Redirect to the next post's URL
                window.location.href = `/blog/${nextPost.id}`;
            } else {
                const error = await response.text();
                console.error('Error during fetch:', error);
                // Display an error message to the user
                alert('Failed to load the next post. Please try again.');
            }
        } catch (error) {
            console.error('Error during fetch:', error);
            // Display an error message to the user
            alert('Failed to load the next post. Please try again.');
        }
    }

</script>